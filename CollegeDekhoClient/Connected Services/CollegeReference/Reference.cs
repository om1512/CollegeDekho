//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CollegeDekhoClient.CollegeReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="College", Namespace="http://schemas.datacontract.org/2004/07/CollegeDekhoService")]
    [System.SerializableAttribute()]
    public partial class College : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CampusSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CanteenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> EstablishedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GynField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LibraryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NAACField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NIRFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SportsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UniversityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebsiteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CampusSize {
            get {
                return this.CampusSizeField;
            }
            set {
                if ((this.CampusSizeField.Equals(value) != true)) {
                    this.CampusSizeField = value;
                    this.RaisePropertyChanged("CampusSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Canteen {
            get {
                return this.CanteenField;
            }
            set {
                if ((object.ReferenceEquals(this.CanteenField, value) != true)) {
                    this.CanteenField = value;
                    this.RaisePropertyChanged("Canteen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Established {
            get {
                return this.EstablishedField;
            }
            set {
                if ((this.EstablishedField.Equals(value) != true)) {
                    this.EstablishedField = value;
                    this.RaisePropertyChanged("Established");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gyn {
            get {
                return this.GynField;
            }
            set {
                if ((object.ReferenceEquals(this.GynField, value) != true)) {
                    this.GynField = value;
                    this.RaisePropertyChanged("Gyn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUrl {
            get {
                return this.ImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUrlField, value) != true)) {
                    this.ImageUrlField = value;
                    this.RaisePropertyChanged("ImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Library {
            get {
                return this.LibraryField;
            }
            set {
                if ((object.ReferenceEquals(this.LibraryField, value) != true)) {
                    this.LibraryField = value;
                    this.RaisePropertyChanged("Library");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NAAC {
            get {
                return this.NAACField;
            }
            set {
                if ((object.ReferenceEquals(this.NAACField, value) != true)) {
                    this.NAACField = value;
                    this.RaisePropertyChanged("NAAC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NIRF {
            get {
                return this.NIRFField;
            }
            set {
                if ((object.ReferenceEquals(this.NIRFField, value) != true)) {
                    this.NIRFField = value;
                    this.RaisePropertyChanged("NIRF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Place {
            get {
                return this.PlaceField;
            }
            set {
                if ((object.ReferenceEquals(this.PlaceField, value) != true)) {
                    this.PlaceField = value;
                    this.RaisePropertyChanged("Place");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sports {
            get {
                return this.SportsField;
            }
            set {
                if ((object.ReferenceEquals(this.SportsField, value) != true)) {
                    this.SportsField = value;
                    this.RaisePropertyChanged("Sports");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string University {
            get {
                return this.UniversityField;
            }
            set {
                if ((object.ReferenceEquals(this.UniversityField, value) != true)) {
                    this.UniversityField = value;
                    this.RaisePropertyChanged("University");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Website {
            get {
                return this.WebsiteField;
            }
            set {
                if ((object.ReferenceEquals(this.WebsiteField, value) != true)) {
                    this.WebsiteField = value;
                    this.RaisePropertyChanged("Website");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CollegeReference.ICollegeService")]
    public interface ICollegeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/GetAllColleges", ReplyAction="http://tempuri.org/ICollegeService/GetAllCollegesResponse")]
        System.Data.DataSet GetAllColleges();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/GetAllColleges", ReplyAction="http://tempuri.org/ICollegeService/GetAllCollegesResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetAllCollegesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/GetCollegeById", ReplyAction="http://tempuri.org/ICollegeService/GetCollegeByIdResponse")]
        CollegeDekhoClient.CollegeReference.College GetCollegeById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/GetCollegeById", ReplyAction="http://tempuri.org/ICollegeService/GetCollegeByIdResponse")]
        System.Threading.Tasks.Task<CollegeDekhoClient.CollegeReference.College> GetCollegeByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/GetCollegeByName", ReplyAction="http://tempuri.org/ICollegeService/GetCollegeByNameResponse")]
        CollegeDekhoClient.CollegeReference.College GetCollegeByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/GetCollegeByName", ReplyAction="http://tempuri.org/ICollegeService/GetCollegeByNameResponse")]
        System.Threading.Tasks.Task<CollegeDekhoClient.CollegeReference.College> GetCollegeByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/GetCollegeByPlace", ReplyAction="http://tempuri.org/ICollegeService/GetCollegeByPlaceResponse")]
        CollegeDekhoClient.CollegeReference.College GetCollegeByPlace(string place);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/GetCollegeByPlace", ReplyAction="http://tempuri.org/ICollegeService/GetCollegeByPlaceResponse")]
        System.Threading.Tasks.Task<CollegeDekhoClient.CollegeReference.College> GetCollegeByPlaceAsync(string place);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/listOfAllCollege", ReplyAction="http://tempuri.org/ICollegeService/listOfAllCollegeResponse")]
        CollegeDekhoClient.CollegeReference.College[] listOfAllCollege();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/listOfAllCollege", ReplyAction="http://tempuri.org/ICollegeService/listOfAllCollegeResponse")]
        System.Threading.Tasks.Task<CollegeDekhoClient.CollegeReference.College[]> listOfAllCollegeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/saveCollege", ReplyAction="http://tempuri.org/ICollegeService/saveCollegeResponse")]
        void saveCollege(CollegeDekhoClient.CollegeReference.College college);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/saveCollege", ReplyAction="http://tempuri.org/ICollegeService/saveCollegeResponse")]
        System.Threading.Tasks.Task saveCollegeAsync(CollegeDekhoClient.CollegeReference.College college);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/DeleteCollegeById", ReplyAction="http://tempuri.org/ICollegeService/DeleteCollegeByIdResponse")]
        void DeleteCollegeById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/DeleteCollegeById", ReplyAction="http://tempuri.org/ICollegeService/DeleteCollegeByIdResponse")]
        System.Threading.Tasks.Task DeleteCollegeByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/UpdateCollegeById", ReplyAction="http://tempuri.org/ICollegeService/UpdateCollegeByIdResponse")]
        string UpdateCollegeById(int id, CollegeDekhoClient.CollegeReference.College college);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICollegeService/UpdateCollegeById", ReplyAction="http://tempuri.org/ICollegeService/UpdateCollegeByIdResponse")]
        System.Threading.Tasks.Task<string> UpdateCollegeByIdAsync(int id, CollegeDekhoClient.CollegeReference.College college);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICollegeServiceChannel : CollegeDekhoClient.CollegeReference.ICollegeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CollegeServiceClient : System.ServiceModel.ClientBase<CollegeDekhoClient.CollegeReference.ICollegeService>, CollegeDekhoClient.CollegeReference.ICollegeService {
        
        public CollegeServiceClient() {
        }
        
        public CollegeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CollegeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CollegeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CollegeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetAllColleges() {
            return base.Channel.GetAllColleges();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetAllCollegesAsync() {
            return base.Channel.GetAllCollegesAsync();
        }
        
        public CollegeDekhoClient.CollegeReference.College GetCollegeById(int id) {
            return base.Channel.GetCollegeById(id);
        }
        
        public System.Threading.Tasks.Task<CollegeDekhoClient.CollegeReference.College> GetCollegeByIdAsync(int id) {
            return base.Channel.GetCollegeByIdAsync(id);
        }
        
        public CollegeDekhoClient.CollegeReference.College GetCollegeByName(string name) {
            return base.Channel.GetCollegeByName(name);
        }
        
        public System.Threading.Tasks.Task<CollegeDekhoClient.CollegeReference.College> GetCollegeByNameAsync(string name) {
            return base.Channel.GetCollegeByNameAsync(name);
        }
        
        public CollegeDekhoClient.CollegeReference.College GetCollegeByPlace(string place) {
            return base.Channel.GetCollegeByPlace(place);
        }
        
        public System.Threading.Tasks.Task<CollegeDekhoClient.CollegeReference.College> GetCollegeByPlaceAsync(string place) {
            return base.Channel.GetCollegeByPlaceAsync(place);
        }
        
        public CollegeDekhoClient.CollegeReference.College[] listOfAllCollege() {
            return base.Channel.listOfAllCollege();
        }
        
        public System.Threading.Tasks.Task<CollegeDekhoClient.CollegeReference.College[]> listOfAllCollegeAsync() {
            return base.Channel.listOfAllCollegeAsync();
        }
        
        public void saveCollege(CollegeDekhoClient.CollegeReference.College college) {
            base.Channel.saveCollege(college);
        }
        
        public System.Threading.Tasks.Task saveCollegeAsync(CollegeDekhoClient.CollegeReference.College college) {
            return base.Channel.saveCollegeAsync(college);
        }
        
        public void DeleteCollegeById(int id) {
            base.Channel.DeleteCollegeById(id);
        }
        
        public System.Threading.Tasks.Task DeleteCollegeByIdAsync(int id) {
            return base.Channel.DeleteCollegeByIdAsync(id);
        }
        
        public string UpdateCollegeById(int id, CollegeDekhoClient.CollegeReference.College college) {
            return base.Channel.UpdateCollegeById(id, college);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCollegeByIdAsync(int id, CollegeDekhoClient.CollegeReference.College college) {
            return base.Channel.UpdateCollegeByIdAsync(id, college);
        }
    }
}
